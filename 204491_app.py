import subprocess
import json
from pymetasploit3.msfrpc import MsfRpcClient

def run_nmap(target):
    command = f"nmap -sV -oX ./allresults/nmap_results.xml {target}"
    subprocess.run(command, shell=True)

def run_nikto(target):
    # Adjusting the command for Windows environment
    command = f"nikto -h {target} -o ./allresults/nikto_results.xml"
    subprocess.run(command, shell=True)

def run_zap(target):
    # Adjusting the command for Windows environment
    zap_path = r"./ZAP_2.15.0/zap.sh"
    command = f"{zap_path} -cmd -port 8090 -quickurl {target} -quickout /home/lcline/204491/allresults/zap_results.xml"
    subprocess.run(command, shell=True)

def run_metasploit(target, port):
    client = MsfRpcClient('a0894903526247', server='127.0.0.1', port=55552)
    exploit = client.modules.use('exploit', 'exploit_name')
    exploit['RHOSTS'] = target
    exploit['RPORT'] = port
    payload = client.modules.use('payload', 'payload_name')
    exploit.execute(payload=payload)

def combine_results():
    results = {}

    with open("./allresults/nmap_results.xml", "r") as file:
        nmap_results = file.read()
    results['nmap'] = nmap_results

    with open("./allresults/nikto_results.xml", "r") as file:
        nikto_results = file.read()
    results['nikto'] = nikto_results

    with open("./allresults/zap_results.xml", "r") as file:
        zap_results = file.read()
    results['zap'] = zap_results

    with open("./allresults/combined_results.xml", "w") as file:
        json.dump(results, file, indent=4)

    return results

def main():
    target = input("Enter the target URL or IP: ")
    run_nmap(target)
    run_nikto(target)
    run_zap(target)
    
    # Read Nmap results to get open ports
    with open("nmap_results.xml", "r") as file:
        nmap_results = file.read()
        # Parse Nmap results to get open ports (this part needs a proper XML parser)

    open_ports = [80, 443]  # Example ports, replace with actual parsing results

    #for port in open_ports:
       # run_metasploit(target, port)

    results = combine_results()
    print("Scanning complete. Results saved to combined_results.json")

if __name__ == "__main__":
    main()
